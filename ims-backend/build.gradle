buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.3.1'
    }
}

plugins {
    id "application"
    id "org.flywaydb.flyway" version "8.0.5"
}

application {
    mainClass = 'org.am.Main'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 11
targetCompatibility = 11

flyway {
    url = project.hasProperty('url') ? project.getProperty('url') : 'jdbc:postgresql://localhost:5432/ims'
    user = project.hasProperty('user') ? project.getProperty('user') : 'postgres'
    password = project.hasProperty('password') ? project.getProperty('password') : 'postgres'
    table = 'flyway_schema_history'
    baselineOnMigrate = true
    locations = ['classpath:db/migration']
}

dependencies {
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'io.springfox', name: 'springfox-swagger2', version: swagger2Version
    compileOnly group: 'io.springfox', name: 'springfox-swagger-ui', version: swagger2Version

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: javaxmlBindingApiVersion
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion

    //Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion

    // Data sources
    implementation group: 'org.postgresql', name: 'postgresql', version: postgresqlVersion

    //Hibernate
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonDatatypeJSR310
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: hibernateTypes52Version

    // Validation
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: hibernateValidatorVersion
    implementation group: 'org.mapstruct', name: 'mapstruct', version: mapstructVersion

    //Query DSL
    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: queryDslVersion

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'javax.validation', name: 'validation-api', version: javaxValidationApi
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springBootVersion

    // Second-level Caching
    implementation group: 'com.hazelcast', name: 'hazelcast', version: '5.0'
    implementation group: 'com.hazelcast', name: 'hazelcast-hibernate53', version: '2.2.1'

    //Annotation Processors
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion
    annotationProcessor("com.querydsl:querydsl-apt:$queryDslVersion:jpa")
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testImplementation group: 'org.flywaydb', name: 'flyway-core', version: flywayVersion
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.1'
    testImplementation group: 'org.reflections', name: 'reflections', version: reflectionsVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springBootVersion
    testImplementation group: 'com.github.javafaker', name: 'javafaker', version: javaFakerVersion

    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: testContainersVersion
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: testContainersVersion
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: testContainersVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.1'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoJunitJupiterVersion

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        //exceptionFormat = 'full'
        // howStandardStreams = true
    }
    //finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
    //  finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            limit {
                minimum = 0.5
            }
        }
    }
}

flywayMigrate.dependsOn classes
